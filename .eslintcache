[{"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/index.js":"1","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/HeaderTypingAnimation.js":"2","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderContainer.js":"3","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/LinkedInLogo.js":"4","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/OurTeam.js":"5","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/App.js":"6","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/GetInvolved.js":"7","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Nav.js":"8","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Dropdown.js":"9","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/BigProfiles.js":"10","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Slide.js":"11","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/index.js":"12","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/ContactUs.js":"13","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderContent.js":"14","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Members.js":"15","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/Home.js":"16","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderNextButton.js":"17"},{"size":959,"mtime":1609520408258,"results":"18","hashOfConfig":"19"},{"size":1064,"mtime":1609520408237,"results":"20","hashOfConfig":"19"},{"size":3622,"mtime":1609606328465,"results":"21","hashOfConfig":"19"},{"size":376,"mtime":1609520408238,"results":"22","hashOfConfig":"19"},{"size":1501,"mtime":1609644706968,"results":"23","hashOfConfig":"19"},{"size":220,"mtime":1608870293493,"results":"24","hashOfConfig":"19"},{"size":1998,"mtime":1609644706967,"results":"25","hashOfConfig":"19"},{"size":4540,"mtime":1609522244899,"results":"26","hashOfConfig":"19"},{"size":1445,"mtime":1609641654179,"results":"27","hashOfConfig":"19"},{"size":4856,"mtime":1609644602379,"results":"28","hashOfConfig":"19"},{"size":362,"mtime":1609606372090,"results":"29","hashOfConfig":"19"},{"size":689,"mtime":1609520408254,"results":"30","hashOfConfig":"19"},{"size":584,"mtime":1608870293495,"results":"31","hashOfConfig":"19"},{"size":338,"mtime":1609520408250,"results":"32","hashOfConfig":"19"},{"size":7255,"mtime":1609641769974,"results":"33","hashOfConfig":"19"},{"size":206,"mtime":1607226588967,"results":"34","hashOfConfig":"19"},{"size":859,"mtime":1609520408252,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1klw7i4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/index.js",[],["76","77"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/HeaderTypingAnimation.js",["78"],"import React from 'react';\nimport './HeaderTypingAnimation.css';\nimport '../pages/pages.css';\nimport Typical from 'react-typical';\nimport { Link } from 'react-router-dom';\n\nfunction HeaderTypingAnimation() {\n    return(\n        <>\n          <div className='header-wrapper'>\n            <div className='header-container'>\n              <div className='text-container'>\n                <h1>\n                  using software\n                </h1>\n                <p>\n                  for{' '}\n                  <Typical\n                    steps={[\n                      'good.', 2000,\n                      'our community.', 2000,\n                      'the planet.', 2000,\n                      'humanity.', 2000\n                    ]}\n                    loop={Infinity}\n                    wrapper='b'\n                  />\n                </p>\n              </div>\n              <Link className='dummyButton' to=\"/getinvolved\" className = 'butn'>get involved</Link>\n            </div>\n          </div>  \n        </>\n    )\n}\n\nexport default HeaderTypingAnimation;",["79","80"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderContainer.js",["81","82"],"import React, { useState, useEffect, useRef } from 'react'\nimport SliderContent from './SliderContent';\nimport Slide from './Slide';\nimport SliderNextButton from './SliderNextButton';\n\nconst getWidth = () => window.innerWidth;\nconst containerStyle = {\n                            position: 'relative',\n                            height: '100%',\n                            width: '100vw', \n                            whiteSpace: 'nowrap',\n                            display: 'flex',\n                            alignItems: 'center'\n                        };\n\n\nconst SliderContainer = props => {\n    const {slides} = props;\n    const currentSlide = slides[0];\n    const nextSlide = slides[1];\n\n    const [state, setState] = useState({\n        activeSlide: 0,\n        translate: 0,\n        transition: 0.3,\n        slideList: [currentSlide, nextSlide]\n    });\n\n    const { activeSlide, translate, slideList, transition } = state;\n\n    const sliderRef = useRef();\n    const transitionRef = useRef();\n    const autoPlayRef = useRef();\n    const resizeRef = useRef();\n\n    useEffect(() => {\n        transitionRef.current = refreshSlideList;\n        autoPlayRef.current = slideRight;\n        resizeRef.current = handleResize;\n    });\n\n    useEffect(() => {\n        const slider = sliderRef.current;\n\n        const refreshSlide = e => {\n            transitionRef.current();\n        }\n\n        const play = () => {\n            autoPlayRef.current();\n        }\n\n        let interval = null;\n\n        if (props.autoPlay) {\n            interval = setInterval(play, props.autoPlay * 1000);\n        }\n\n        const resize = () => {\n            clearInterval(interval); // pauses autoPlay\n            resizeRef.current();\n            interval = setInterval(play, props.autoPlay * 1000);\n        }\n\n        const transitionEnd = slider.addEventListener('transitionend', refreshSlide);\n        const onResize = window.addEventListener('resize', resize);\n\n        return () => {\n            slider.removeEventListener('transitionend', transitionEnd);\n            window.removeEventListener('resize', onResize);\n\n            if (props.autoPlay) {\n                clearInterval(interval);\n            }\n        }\n    }, []);\n\n    const slideRight = () => {\n        setState({\n            ...state,\n            translate: translate + getWidth(),\n            activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\n        });\n    }\n\n    const refreshSlideList = () => {\n        const activeIndex = activeSlide === slides.length ? 0 : activeSlide;\n        const nextToActiveIndex = activeSlide === slides.length - 1 ? 0 : activeSlide + 1;\n        let slideList = [slides[activeIndex], slides[nextToActiveIndex]];\n        setState({\n            ...state,\n            slideList,\n            translate: 0,\n            transition: 0\n        });\n    }\n\n    useEffect(() => {\n        if(transition === 0) setState({...state, transition: 0.3});\n    }, [transition])\n\n    const handleResize = () => {\n        setState({\n            ...state,\n            translate: 0,\n            transition: 0\n        })\n    }\n\n    return <div style={containerStyle} ref={sliderRef}>\n        <SliderContent \n            translate={translate}\n            transition={transition}\n            width={getWidth() * slideList.length}\n        >\n            {slideList.map((slide, i) => (\n                <Slide width={getWidth()} key={slide + i} content={slide} />\n            ))}\n        </SliderContent>\n        <SliderNextButton\n            width={getWidth()}\n            handleClick={slideRight}\n        />\n    </div>\n}\n\nexport default SliderContainer;","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/LinkedInLogo.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/OurTeam.js",["83"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/App.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/GetInvolved.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Nav.js",["84","85","86","87"],"import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport './NavBar.css';\n\nconst Nav = () => {\n    const [underLink, setUnderLink] = useState({\n        home: {\n            marginLeft: '10px'\n        },\n        getinvolved: {\n            marginLeft: '10px' \n        },\n        about: {\n            marginLeft: '10px' \n        }, \n        ourteam: {\n            marginLeft: '10px' \n        }\n    })\n\n    // const location = useLocation()\n\n    // const [curLocation, setLocation] = useState({\n    //     location: location.pathname\n    // })\n    \n    // useEffect(()=> {\n    //     setLocation(location.pathname)\n    //     console.log(curLocation.location)\n    //     const prevState = underLink\n    //     // for (const page in underLink){\n    //     //     console.log(curLocation.location)\n    //     //     if(curLocation.location.slice(1) === page){\n    //     //         let pageName = page\n    //     //         setUnderLink({\n    //     //             ...prevState,\n    //     //             [pageName]: {\n    //     //                 marginLeft: '10px',\n    //     //                 fontWeight: 'bold'\n    //     //             }\n    //     //         })\n    //     //     }\n    //     // }\n    //     switch (curLocation.location){\n    //         case '/':\n    //             setUnderLink({\n    //                 ...prevState,\n    //                 home: {\n    //                     marginLeft: '10px',\n    //                     fontWeight: 'bold'\n    //                     }\n    //             })\n    //             break;\n    //         case '/getinvolved':\n    //             setUnderLink({\n    //                 ...prevState,\n    //                 getinvolved: {\n    //                     marginLeft: '10px',\n    //                     fontWeight: 'bold'\n    //                     }\n    //             })\n    //             break;\n    //         case '/about':\n    //             setUnderLink({\n    //                 ...prevState,\n    //                 about: {\n    //                     marginLeft: '10px',\n    //                     fontWeight: 'bold'\n    //                     }\n    //             })\n    //             break;\n    //         case '/ourteam':\n    //             setUnderLink({\n    //                 ...prevState,\n    //                 ourteam: {\n    //                     marginLeft: '10px',\n    //                     fontWeight: 'bold'\n    //                     }\n    //             })\n    //             break;\n    //         default:\n    //             setUnderLink({\n    //                 ...prevState\n    //             })\n    //     }\n    // }, [curLocation, underLink])\n\n    // when we're at a certain location, we bold the page at that location\n    // 1) we check the location using useEffect\n    // 2) store the location using useState\n    // 3) if we're on a location, match the style of the location to the element and change the style \n    // 4) make a style attribute of state. There's two states: one with and one without fontWeight\n\n    // const onClickLinkHandler = (isClicked) => {\n    //     if (isClicked) {\n    //         setUnderLink({\n    //             marginLeft: '10px',\n    //             fontWeight: 'bold'\n    //         })\n    //     } else {\n    //         setUnderLink({\n    //             marginLeft: '10px'\n    //         })\n    //     }\n    // }\n\n  return (\n    <>\n    <nav class=\"navbar navbar-expand-sm navbar-light\" style={{position: \"fixed\", top: 0, left: 0, zIndex : 1, width: \"100%\", backgroundColor: \"rgba(255, 255, 255, 0.5)\"}}>\n        <Link class=\"navbar-brand\" style={{padding: '8px'}} to=\"/\">\n            <img id=\"h4iLogo\" src=\"https://hack4impact.org/svg/logo.svg\" alt=\"Hack4Impact Logo\" />\n            <img id=\"ccLogo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Carleton_College_logo.svg/1280px-Carleton_College_logo.svg.png\" alt=\"Carleton College\"/>\n        </Link>\n\n        <ul className=\"navbar-nav\" >\n            <li class=\"nav-item\">\n                <Link class=\"nav-link\" to=\"/\">home</Link>\n            </li>\n            <li class=\"nav-item\">\n                <Link class=\"nav-link\" to=\"/getinvolved\">get involved</Link>\n            </li>\n            <li class=\"nav-item\">\n                <Link class=\"nav-link\" to=\"/about\">about</Link>\n            </li>\n            <li class=\"nav-item\">\n                <Link class=\"nav-link\" to=\"/ourteam\">our team</Link>\n            </li>\n        </ul>\n    </nav>\n    </>\n  )\n}\n\nexport default Nav;\n","/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Dropdown.js",["88","89","90"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/BigProfiles.js",["91"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Slide.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/index.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/ContactUs.js",[],["92","93"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderContent.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/Members.js",["94"],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/pages/Home.js",[],"/Users/swapnavarma/Desktop/carleton-website/Carleton-Website/src/components/SliderNextButton.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":30,"column":63,"nodeType":"101","endLine":30,"endColumn":81},{"ruleId":"95","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":76,"column":8,"nodeType":"106","endLine":76,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":100,"column":8,"nodeType":"106","endLine":100,"endColumn":20,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"114","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"115","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":27},{"ruleId":"110","severity":1,"message":"116","line":7,"column":12,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":7,"column":23,"nodeType":"112","messageId":"113","endLine":7,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"118","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":19,"column":5,"nodeType":"121","messageId":"122","endLine":21,"endColumn":88},{"ruleId":"123","severity":1,"message":"124","line":4,"column":5,"nodeType":"125","endLine":11,"endColumn":6},{"ruleId":"95","replacedBy":"126"},{"ruleId":"97","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":13,"column":24,"nodeType":"130","messageId":"131","endLine":13,"endColumn":26},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["132"],["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.autoPlay'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["135"],"no-unused-vars","'MemberProfile' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'underLink' is assigned a value but never used.","'setUnderLink' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["132"],["133"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [props.autoPlay]",{"range":"140","text":"141"},"Update the dependencies array to be: [state, transition]",{"range":"142","text":"143"},[2206,2208],"[props.autoPlay]",[2942,2954],"[state, transition]"]